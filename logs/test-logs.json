{"event":"runStart","testCount":"45","fuzzRuns":"100","globs":[],"paths":["D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\DateTests.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\EventCategoryTests.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\EventTests.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\IntervalTests.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\PersonalDetailsTests.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\RepoTests.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\GetMonth0.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\GetMonth1.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\GetMonth2.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\GetMonth3.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\GetMonth4.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\GetMonth5.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\ModuleDoc0.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\ModuleDoc1.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\ModuleDoc2.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\ModuleDoc3.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\ModuleDoc4.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\ModuleDoc5.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\ModuleDoc6.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\MonthsBetweenMonths0.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\MonthsBetweenMonths1.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Date\\MonthsBetweenMonths2.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Event\\Category\\AllSelected0.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Event\\Category\\IsEventCategorySelected0.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Event\\Category\\ModuleDoc0.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Event\\Category\\ModuleDoc1.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Interval\\ModuleDoc0.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Interval\\ModuleDoc1.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Interval\\ModuleDoc2.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Interval\\ModuleDoc3.elm","D:\\Documents\\Facultate\\ANUL 3\\SEM I\\Functional Programming\\Assignment1\\tests\\VerifyExamples\\Model\\Interval\\ModuleDoc4.elm"],"initialSeed":"83751454132813"}
{"event":"testCompleted","status":"pass","labels":["DateTests","Model.Date module","Date view for year-only date contains the year"],"failures":[],"duration":"4"}
{"event":"testCompleted","status":"pass","labels":["DateTests","Model.Date module","Date view for full date contains the year"],"failures":[],"duration":"5"}
{"event":"testCompleted","status":"pass","labels":["DateTests","Model.Date module","Date view for full date contains the month"],"failures":[],"duration":"5"}
{"event":"testCompleted","status":"pass","labels":["EventCategoryTests","Model.Event.Category module","allSelected has all categories set"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["EventCategoryTests","Model.Event.Category module","set sets selected categories correctly"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["EventCategoryTests","Model.Event.Category module","view contains 4 checkboxes"],"failures":[],"duration":"3"}
{"event":"testCompleted","status":"pass","labels":["EventTests","Model.Event module","Event view has class event"],"failures":[],"duration":"4"}
{"event":"testCompleted","status":"pass","labels":["EventTests","Model.Event module","Children of Event view have the required fields"],"failures":[],"duration":"9"}
{"event":"testCompleted","status":"pass","labels":["EventTests","Model.Event module","Important events have class event-important"],"failures":[],"duration":"4"}
{"event":"testCompleted","status":"pass","labels":["IntervalTests","Model.Interval module","Interval view has class interval"],"failures":[],"duration":"2"}
{"event":"testCompleted","status":"pass","labels":["IntervalTests","Model.Interval module","Interval view has text \"Present\" for open intervals"],"failures":[],"duration":"2"}
{"event":"testCompleted","status":"pass","labels":["IntervalTests","Model.Interval module","Interval view has length for full intervals"],"failures":[],"duration":"4"}
{"event":"testCompleted","status":"pass","labels":["PersonalDetailsTests","Model.PersonalDetails module","personalDetailsView tests","Personal details view includes the name"],"failures":[],"duration":"4"}
{"event":"testCompleted","status":"pass","labels":["PersonalDetailsTests","Model.PersonalDetails module","personalDetailsView tests","Personal details view includes the intro"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["PersonalDetailsTests","Model.PersonalDetails module","personalDetailsView tests","Personal details view includes at least one contact"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["PersonalDetailsTests","Model.PersonalDetails module","personalDetailsView tests","Personal details view includes at least one social link"],"failures":[],"duration":"3"}
{"event":"testCompleted","status":"pass","labels":["PersonalDetailsTests","Model.PersonalDetails module","personalDetailsView tests","Each social link has tag a"],"failures":[],"duration":"2"}
{"event":"testCompleted","status":"pass","labels":["RepoTests","Model.Repo module","Repo view has class repo"],"failures":[],"duration":"3"}
{"event":"testCompleted","status":"pass","labels":["RepoTests","Model.Repo module","Children of Repo view have the required fields"],"failures":[],"duration":"3"}
{"event":"testCompleted","status":"pass","labels":["RepoTests","Model.Repo module","Repo url should contain a link to the repo"],"failures":[],"duration":"2"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.GetMonth0","#getMonth: \n\n    Model.Date.compare (onlyYear 2019) (full 2020 Dec)\n    --> LT"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.GetMonth1","#getMonth: \n\n    Model.Date.compare (onlyYear 2020) (full 2020 Dec)\n    --> GT"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.GetMonth2","#getMonth: \n\n    Model.Date.compare (onlyYear 2020) (onlyYear 2021)\n    --> LT"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.GetMonth3","#getMonth: \n\n    Model.Date.compare (full 2020 Jan) (full 2020 Dec)\n    --> LT"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.GetMonth4","#getMonth: \n\n    Model.Date.compare (full 2021 Dec) (full 2021 Jan)\n    --> GT"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.GetMonth5","#getMonth: \n\n    Model.Date.compare (full 2020 Jan) (full 2021 Jan)\n    --> LT"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.ModuleDoc0","Module VerifyExamples: \n\n    monthsBetween (full 2020 Dec) (full 2021 Jan)\n    --> Just 1"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.ModuleDoc1","Module VerifyExamples: \n\n    monthsBetween (full 2020 Jan) (onlyYear 2021)\n    --> Nothing"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.ModuleDoc2","Module VerifyExamples: \n\n    monthsBetween (onlyYear 2020) (full 2021 Jan)\n    --> Nothing"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.ModuleDoc3","Module VerifyExamples: \n\n    monthsBetween (full 2021 Jan) (full 2020 Feb)\n    --> Just 11"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.ModuleDoc4","Module VerifyExamples: \n\n    monthsBetween (full 2020 Jan) (full 2021 Feb)\n    --> Just 13"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.ModuleDoc5","Module VerifyExamples: \n\n    monthsBetween (full 2020 Mar) (full 2020 Jan)\n    --> Just 2"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.ModuleDoc6","Module VerifyExamples: \n\n    monthsBetween (full 2020 Jan) (full 2020 Feb)\n    --> Just 1"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.MonthsBetweenMonths0","#monthsBetweenMonths: \n\n    monthsBetweenMonths Apr Jan\n    --> 3"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.MonthsBetweenMonths1","#monthsBetweenMonths: \n\n    monthsBetweenMonths Jan Apr\n    --> 3"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Date.MonthsBetweenMonths2","#monthsBetweenMonths: \n\n    monthsBetweenMonths Jan Jan\n    --> 0"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Event.Category.AllSelected0","#allSelected: \n\n    isEventCategorySelected Academic allSelected\n    --> True"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Event.Category.IsEventCategorySelected0","#isEventCategorySelected: \n\n    isEventCategorySelected Academic allSelected\n    --> True"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Event.Category.ModuleDoc0","Module VerifyExamples: \n\n    allSelected |> set Academic False |> isEventCategorySelected Work\n    --> True"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Event.Category.ModuleDoc1","Module VerifyExamples: \n\n    allSelected |> set Academic False |> isEventCategorySelected Academic\n    --> False"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Interval.ModuleDoc0","Module VerifyExamples: \n\n    Model.Interval.compare (withDurationMonths 2019 Date.Jan 2) (open (Date.onlyYear 2019))\n    --> LT"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Interval.ModuleDoc1","Module VerifyExamples: \n\n    Model.Interval.compare (withDurationMonths 2019 Date.Feb 2) (withDurationMonths 2019 Date.Jan 2)\n    --> GT"],"failures":[],"duration":"0"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Interval.ModuleDoc2","Module VerifyExamples: \n\n    Model.Interval.compare (withDurationMonths 2019 Date.Jan 2) (withDurationMonths 2019 Date.Jan 2)\n    --> EQ"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Interval.ModuleDoc3","Module VerifyExamples: \n\n    Model.Interval.compare (oneYear 2019) (withDurationYears (Date.onlyYear 2020) 2)\n    --> LT"],"failures":[],"duration":"1"}
{"event":"testCompleted","status":"pass","labels":["VerifyExamples.Model.Interval.ModuleDoc4","Module VerifyExamples: \n\n    Model.Interval.compare (oneYear 2019) (oneYear 2020)\n    --> LT"],"failures":[],"duration":"0"}
{"event":"runComplete","passed":"45","failed":"0","duration":"229","autoFail":null}
